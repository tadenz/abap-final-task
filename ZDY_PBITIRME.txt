*&---------------------------------------------------------------------*
*& Report ZDY_PBITIRME
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT zdy_pbitirme.

TABLES : zdy_servisheader,
         zdy_servisitem.

TYPES: BEGIN OF zdy_str001,
         servis_id    TYPE  int4,
         musteri_isim TYPE  char20,
         satis_tarih  TYPE  dats,
         sirket_bayi  TYPE  char20,
         servis_kayit TYPE  int4,
         servis_pk    TYPE  char20,
         servis_islem TYPE  char20,
       END OF zdy_str001.

DATA: gt_data       TYPE STANDARD TABLE OF zdy_str001 WITH HEADER LINE,
      gt_fcat       TYPE lvc_t_fcat,
      gs_fcat       TYPE lvc_s_fcat,
      gs_layout     TYPE lvc_s_layo,
      ls_data       TYPE zdy_str001,
      gv_active_tab TYPE string,
      gv_tcode1     TYPE tcode VALUE 'ZDY38',
      gv_tcode2     TYPE tcode VALUE 'ZDY42',
      lt_headert    TYPE STANDARD TABLE OF zdy_servisheader WITH HEADER LINE,
      ls_headert    TYPE zdy_servisheader,
      lt_itemt      TYPE STANDARD TABLE OF zdy_servisitem WITH HEADER LINE,
      ls_itemt      TYPE zdy_servisitem.



SELECTION-SCREEN BEGIN OF TABBED BLOCK tab FOR 10 LINES.
  SELECTION-SCREEN TAB (20) tab1 USER-COMMAND push1 DEFAULT SCREEN 300.
  SELECTION-SCREEN TAB (20) tab2 USER-COMMAND push2 DEFAULT SCREEN 400.
SELECTION-SCREEN END OF BLOCK tab.

SELECTION-SCREEN BEGIN OF SCREEN 300 AS SUBSCREEN.
  PARAMETERS: p_sid  TYPE zdy_servisheader-servis_id,
              p_skid TYPE zdy_servisitem-servis_id,
              p_skyt TYPE zdy_servisitem-servis_kayit.
SELECTION-SCREEN END OF SCREEN 300.
SELECTION-SCREEN BEGIN OF SCREEN 400 AS SUBSCREEN.
  PARAMETERS: P_fname TYPE localfile .
SELECTION-SCREEN END OF SCREEN 400.

INITIALIZATION.
  tab1 = 'TAB1'.
  tab2 = 'TAB2'.

AT SELECTION-SCREEN.

START-OF-SELECTION.
  IF tab-activetab = 'TAB1' AND p_sid IS NOT INITIAL AND p_skyt IS NOT INITIAL.
    SELECT
      zdy_servisheader~servis_id    AS servis_id,
      zdy_servisheader~musteri_isim AS musteri_isim,
      zdy_servisheader~satis_tarih  AS satis_tarihi,
      zdy_servisheader~sirket_bayi  AS satis_bayisi,
      zdy_servisitem~servis_kayit   AS kayit_numarası,
      zdy_servisitem~servis_pk      AS parca_kaynagi,
      zdy_servisitem~servis_islem   AS gerceklesen_islem
      INTO TABLE @gt_data
      FROM zdy_servisheader
      RIGHT OUTER JOIN zdy_servisitem
           ON zdy_servisheader~servis_id
    EQ zdy_servisheader~servis_id
      WHERE zdy_servisheader~servis_id = @p_sid
    AND zdy_servisitem~servis_kayit = @p_skyt.

    CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
      EXPORTING
        i_structure_name       = 'ZDY_STR001'
      CHANGING
        ct_fieldcat            = gt_fcat
      EXCEPTIONS
        inconsistent_interface = 1
        program_error          = 2
        OTHERS                 = 3.
    IF sy-subrc <> 0.

    ENDIF.

    LOOP AT gt_fcat INTO gs_fcat.

      CASE gs_fcat-fieldname.
        WHEN 'SERVIS_ID'.
          gs_fcat-outputlen = 10.
        WHEN 'MUSTERI_ISIM'.
          gs_fcat-outputlen = 20.
        WHEN 'SATIS_TARIH'.
          gs_fcat-outputlen = 8.
        WHEN 'SIRKET_BAYI'.
          gs_fcat-outputlen = 20.

        WHEN OTHERS.
      ENDCASE.

      MODIFY gt_fcat FROM gs_fcat TRANSPORTING outputlen.

    ENDLOOP.


    CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY_LVC'
      EXPORTING
        i_callback_program       = sy-repid
        i_callback_pf_status_set = 'PF_STATUS_SET'
        i_callback_user_command  = 'USER_COMMAND'
        is_layout_lvc            = gs_layout
        it_fieldcat_lvc          = gt_fcat
        i_default                = 'X'
        i_save                   = ' '
      TABLES
        t_outtab                 = gt_data
      EXCEPTIONS
        program_error            = 1
        OTHERS                   = 2.
    IF sy-subrc <> 0.

    ENDIF.
  ENDIF.


AT SELECTION-SCREEN ON VALUE-REQUEST FOR p_fname.
  PERFORM f4_fname.

  IF tab-activetab = 'TAB2' AND p_fname IS NOT INITIAL.
    PERFORM upload_data.
  ELSE.
    MESSAGE  'Data not Found!' TYPE 'S'.
  ENDIF.
* &---------------------------------------------------------------------
*&      Form  f4_fname
* &---------------------------------------------------------------------
*       text
* ----------------------------------------------------------------------
FORM f4_fname .
  DATA: file_table TYPE filetable,
        file_line  TYPE file_table,
        rc         TYPE i.

  CALL METHOD cl_gui_frontend_services=>file_open_dialog
    EXPORTING
      default_extension       = 'xlsx'
    CHANGING
      file_table              = file_table
      rc                      = rc
    EXCEPTIONS
      file_open_dialog_failed = 1
      cntl_error              = 2
      error_no_gui            = 3
      not_supported_by_gui    = 4
      OTHERS                  = 5.

  READ TABLE file_table INTO file_line INDEX 1.
  IF sy-subrc = 0.
    p_fname = file_line-filename.
  ENDIF.
ENDFORM.

"f4_fname

* &---------------------------------------------------------------------
* &      Form  upload_data
* &---------------------------------------------------------------------
*       text
* ----------------------------------------------------------------------
FORM upload_data .
  DATA:lt_file  LIKE alsmex_tabline OCCURS 0 WITH HEADER LINE.

  CALL FUNCTION 'ALSM_EXCEL_TO_INTERNAL_TABLE'
    EXPORTING
      filename                = p_fname
      i_begin_col             = 1
      i_begin_row             = 2
      i_end_col               = 12
      i_end_row               = 1000
    TABLES
      intern                  = lt_file
    EXCEPTIONS
      inconsistent_parameters = 1
      upload_ole              = 2
      OTHERS                  = 3.


  IF sy-subrc NE 0 OR lt_file[] IS INITIAL.
    MESSAGE 'Dosya Okunamadı !' TYPE 'I'.
  ELSE.
    REFRESH gt_data.
    LOOP AT lt_file.
      CASE lt_file-col.
        WHEN '0001'.
          MOVE lt_file-value TO gt_data-servis_id.
        WHEN '0002'.
          MOVE lt_file-value TO gt_data-musteri_isim.
        WHEN '0003'.
          MOVE lt_file-value TO gt_data-satis_tarih.
        WHEN '0004'.
          MOVE lt_file-value TO gt_data-sirket_bayi.
        WHEN '0005'.
          MOVE lt_file-value TO gt_data-servis_kayit.
        WHEN '0006'.
          MOVE lt_file-value TO gt_data-servis_pk.
        WHEN '0007'.
          MOVE lt_file-value TO gt_data-servis_islem.
      ENDCASE.
      AT END OF row.
        APPEND gt_data.
        CLEAR gt_data.
      ENDAT.
    ENDLOOP.
  ENDIF.


  CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
    EXPORTING
      i_structure_name       = 'ZDY_STR001'
    CHANGING
      ct_fieldcat            = gt_fcat
    EXCEPTIONS
      inconsistent_interface = 1
      program_error          = 2
      OTHERS                 = 3.
  IF sy-subrc <> 0.
    WRITE : 'Bir hata oluştu'.
  ENDIF.


  LOOP AT gt_fcat INTO gs_fcat.

    CASE gs_fcat-fieldname.
      WHEN 'SERVIS_ID'.
        gs_fcat-outputlen = 10.
      WHEN 'SERVIS_KAYIT'.
        gs_fcat-outputlen = 10.
      WHEN 'SERVIS_PK'.
        gs_fcat-outputlen = 20.
      WHEN 'SERVIS_ISLEM'.
        gs_fcat-outputlen = 20.
    ENDCASE.

    MODIFY gt_fcat FROM gs_fcat TRANSPORTING outputlen.
  ENDLOOP.



  " Adım 5: ALV Grid ekranını görüntüleme
  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY_LVC'
    EXPORTING
      i_callback_program       = sy-repid
      i_callback_pf_status_set = 'PF_STATUS_SET'
      i_callback_user_command  = 'USER_COMMAND'
      is_layout_lvc            = gs_layout
      it_fieldcat_lvc          = gt_fcat
      i_default                = 'X'
      i_save                   = ' '
    TABLES
      t_outtab                 = gt_data.

  IF sy-subrc <> 0.
    " Hata yönetimi
  ENDIF.

ENDFORM.


FORM pf_status_set USING p_extab TYPE slis_t_extab.
  SET PF-STATUS 'STANDARD_FULLSCREEN'.
ENDFORM.

FORM user_command USING r_ucomm     LIKE sy-ucomm
                        rs_selfield TYPE slis_selfield.

  DATA : lv_message TYPE char200.
  CONCATENATE sy-ucomm
              'pressed the button.'
              INTO lv_message
              SEPARATED BY space.
  MESSAGE lv_message TYPE 'I'.

  CASE r_ucomm.
    WHEN '&BACK'.
      LEAVE TO SCREEN 0.
    WHEN '&EXIT'.
      LEAVE TO SCREEN 0.
    WHEN '&BUTTON1'.
      PERFORM save_data.
    WHEN '&TCODE1'.
      PERFORM run_tcode1.
    WHEN '&TCODE2'.
      PERFORM run_tcode2.
    WHEN OTHERS.
  ENDCASE.

ENDFORM.


FORM save_data.

  LOOP AT gt_data INTO ls_data.
    MOVE-CORRESPONDING ls_data TO ls_headert.
    APPEND ls_headert TO lt_headert.
  ENDLOOP.

  LOOP AT gt_data INTO ls_data.
    MOVE-CORRESPONDING ls_data TO ls_itemt.
    APPEND ls_itemt TO lt_itemt.
  ENDLOOP.

  MODIFY zdy_servisheader FROM TABLE lt_headert[].
  MODIFY zdy_servisitem FROM TABLE lt_itemt[].

ENDFORM.

FORM run_tcode1.
  CALL TRANSACTION gv_tcode1.
ENDFORM.

FORM run_tcode2.
  CALL TRANSACTION gv_tcode2.
ENDFORM.